//leer form

const submmitButton = this.shadowRoot.querySelector(".submit");
submmitButton.addEventListener("click", async (event) => {
const container = this.shadowRoot.querySelector(".form-container");
const data = Object.fromEntries(new FormData(container).entries());
const inputData = JSON.parse(JSON.stringify(data));	})

// leer
async fetchData() {
    try {
      if (this.type === "Reports"){
        const response = await fetch(`https://665ce299e88051d60404f656.mockapi.io/Reports`);  // Realiza una solicitud fetch para obtener los datos
        const data = await response.json();  // Convierte la respuesta a JSON
        this.data = data;  // Asigna los datos obtenidos a 'data'
        this.requestUpdate();  // Solicita una actualización del componente
      } else {
        const response = await fetch(`https://66560fd13c1d3b60293c1866.mockapi.io/${this.type}`);  // Realiza una solicitud fetch para obtener los datos
        const data = await response.json();  // Convierte la respuesta a JSON
        this.data = data;  // Asigna los datos obtenidos a 'data'
        this.requestUpdate();  // Solicita una actualización del componente
      }
    } catch (error) {
        console.error('Error fetching data:', error);  // Muestra un error en caso de fallo
    }

// actualizar
const response = await fetch(`https://66560fd13c1d3b60293c1866.mockapi.io/${this.type}/${this.editItem.id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },  // Establece el encabezado de tipo de contenido
                body: JSON.stringify(updatedItem)  // Convierte el objeto a JSON y lo envía en el cuerpo de la solicitud
            });
            const updatedResponse = await response.json();  // Convierte la respuesta a JSON
            // Actualiza el dato localmente
            this.data = this.data.map(item => item.id === this.editItem.id ? updatedResponse : item);
            this.editItem = null;  // Limpia el elemento en edición
            this.requestUpdate();  // Solicita una actualización del componente


            // delete
            await fetch(`https://665ce299e88051d60404f656.mockapi.io/Reports/${id}`, {
                method: 'DELETE'  // Realiza una solicitud DELETE para eliminar el elemento
            });
            // Elimina el dato localmente
            this.data = (this.data).filter(item => item.id !== id);
            this.requestUpdate();  // Solicita una actualización del componente




